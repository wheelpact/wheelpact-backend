{
    "openapi": "3.0.0",
    "info": {
        "title": "Wheelpact API",
        "description": "API documentation for Wheelpact backend",
        "contact": {
            "email": "dev@wheelpact.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/dealerApi/v1/branches": {
            "get": {
                "tags": [
                    "Dealer: Branches"
                ],
                "summary": "List all branches of the authenticated dealer",
                "description": "Returns a paginated list of branches created by the logged-in dealer.",
                "operationId": "getDealerBranches",
                "responses": {
                    "200": {
                        "description": "List of branches",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Branch Name"
                                                    },
                                                    "branch_type": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "contact_number": {
                                                        "type": "string",
                                                        "example": "9876543210"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "branch@example.com"
                                                    },
                                                    "thumbnail": {
                                                        "type": "string",
                                                        "example": "thumb.jpg"
                                                    },
                                                    "logo": {
                                                        "type": "string",
                                                        "example": "logo.jpg"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Dealer: Branches"
                ],
                "summary": "Create a new branch",
                "description": "Creates a new branch with optional banners and multiple deliverable images.",
                "operationId": "createBranch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "branch_type",
                                    "branch_supported_vehicle_type",
                                    "branch_services",
                                    "country_id",
                                    "state_id",
                                    "city_id",
                                    "address",
                                    "contact_number",
                                    "whatsapp_no",
                                    "email",
                                    "short_description",
                                    "map_latitude",
                                    "map_longitude",
                                    "map_city",
                                    "map_district",
                                    "map_state",
                                    "branch_logo",
                                    "branch_thumbnail"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of branch",
                                        "type": "string"
                                    },
                                    "branch_type": {
                                        "description": "Type of branch (1=Main Branch, 2=Sub Branch)",
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ],
                                        "example": 1
                                    },
                                    "branch_supported_vehicle_type": {
                                        "description": "Supported vehicle types (1=Car, 2=Bike, 3=Both)",
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2,
                                            3
                                        ],
                                        "example": 3
                                    },
                                    "branch_services": {
                                        "description": "Services offered by the branch",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "Oil Change",
                                            "Tire Replacement",
                                            "Brake Inspection"
                                        ]
                                    },
                                    "country_id": {
                                        "description": "ID of the country where the branch is located",
                                        "type": "integer",
                                        "example": "101"
                                    },
                                    "state_id": {
                                        "description": "ID of the state where the branch is located",
                                        "type": "integer",
                                        "example": "201"
                                    },
                                    "city_id": {
                                        "description": "ID of the city where the branch is located",
                                        "type": "integer",
                                        "example": "301"
                                    },
                                    "address": {
                                        "description": "Full address of the branch",
                                        "type": "string",
                                        "example": "123 Main St, City, State, 12345"
                                    },
                                    "contact_number": {
                                        "description": "Contact number of branch",
                                        "type": "string",
                                        "example": "9876543210"
                                    },
                                    "whatsapp_no": {
                                        "description": "WhatsApp number of branch",
                                        "type": "string",
                                        "example": "9876543210"
                                    },
                                    "email": {
                                        "description": "Email address of the branch",
                                        "type": "string",
                                        "format": "email",
                                        "example": "jhon@example.com"
                                    },
                                    "short_description": {
                                        "type": "string"
                                    },
                                    "branch_map": {
                                        "type": "string"
                                    },
                                    "map_latitude": {
                                        "description": "Latitude for branch location on map",
                                        "type": "string",
                                        "example": "12.9715987"
                                    },
                                    "map_longitude": {
                                        "description": "Longitude for branch location on map",
                                        "type": "string",
                                        "example": "77.594566"
                                    },
                                    "map_city": {
                                        "description": "City for branch location on map",
                                        "type": "string",
                                        "example": "Mumbai"
                                    },
                                    "map_district": {
                                        "description": "District for branch location on map",
                                        "type": "string",
                                        "example": "Mumbai District"
                                    },
                                    "map_state": {
                                        "description": "State for branch location on map",
                                        "type": "string",
                                        "example": "Maharashtra"
                                    },
                                    "branch_logo": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "branch_thumbnail": {
                                        "description": "Branch thumbnail image",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "branch_banner1": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "branch_banner2": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "branch_banner3": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "deliverables_img_name[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Branch created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Branch created successfully."
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/customerApi/v1/customerRegister": {
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Register a new customer",
                "operationId": "b6c377d2cccdd5c33c85cd28d407ed07",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "contact_no"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "contact_no": {
                                        "type": "string",
                                        "example": "1234567890"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Customer registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer registered successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "contact_no": {
                                                    "type": "string",
                                                    "example": "1234567890"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Customer not registered, please try again",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer not registered, please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customerApi/v1/customergenerateOtp": {
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Generate OTP for Customer Login",
                "operationId": "09ca442e7f56549483302e14371770f4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP generated and sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP generated and sent successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "otp": {
                                                    "type": "integer",
                                                    "example": 123456
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customerApi/v1/customervalidateOtpLogin": {
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Validate OTP for Customer Login",
                "operationId": "1995758a41640e39178f25142b4e85c1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "otp"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "otp": {
                                        "type": "integer",
                                        "example": 123456
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "customer": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        },
                                                        "contact_no": {
                                                            "type": "string",
                                                            "example": "1234567890"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|sdfk9dsf8dsfksdf89sdf7..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid OTP or email",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid OTP or email"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "otp": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The otp field must be 6 digits."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customerApi/v1/customerTestDriveRequest": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get Test Drive Requests for Logged-in Customer",
                "description": "Returns the list of test drive requests for the authenticated customer. Requires a valid Bearer token (Sanctum).",
                "operationId": "9f86818524cafe2f9c32e642458ce89f",
                "responses": {
                    "200": {
                        "description": "Test drive list retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Test drive list retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "customer_id": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "customer_name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "customer_phone": {
                                                        "type": "string",
                                                        "example": "+1234567890"
                                                    },
                                                    "customer_email": {
                                                        "type": "string",
                                                        "example": "john@example.com"
                                                    },
                                                    "branch_id": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "vehicle_id": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "dateOfVisit": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "2025-03-25"
                                                    },
                                                    "timeOfVisit": {
                                                        "type": "string",
                                                        "example": "1"
                                                    },
                                                    "comments": {
                                                        "type": "string",
                                                        "example": "Looking forward to the test drive."
                                                    },
                                                    "license_file_path": {
                                                        "type": "string",
                                                        "example": "uploads/licenses/license123.jpg"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "pending"
                                                    },
                                                    "is_active": {
                                                        "type": "string",
                                                        "example": "1"
                                                    },
                                                    "reason_selected": {
                                                        "type": "string",
                                                        "example": "Convenient time"
                                                    },
                                                    "dealer_comments": {
                                                        "type": "string",
                                                        "example": "Confirmed"
                                                    },
                                                    "update_by": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-03-24T10:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-03-24T10:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated. Please log in to continue.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated. Please log in to continue."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Submit a Test Drive Request",
                "description": "Authenticated customer submits a test drive request with required customer details and license file.",
                "operationId": "d039bae69892fccfa611eb6bbed426ac",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "customer_id",
                                    "customer_name",
                                    "customer_phone",
                                    "branch_id",
                                    "vehicle_id",
                                    "dateOfVisit",
                                    "timeOfVisit",
                                    "comments",
                                    "license_file_path"
                                ],
                                "properties": {
                                    "customer_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "customer_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "customer_phone": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "branch_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "vehicle_id": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "dateOfVisit": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-03-25"
                                    },
                                    "timeOfVisit": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "comments": {
                                        "type": "string",
                                        "example": "Looking forward to the test drive."
                                    },
                                    "license_file_path": {
                                        "description": "Upload license file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Test drive request submitted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Test drive request submitted successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "customer_id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "customer_name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "customer_phone": {
                                                    "type": "string",
                                                    "example": "+1234567890"
                                                },
                                                "customer_email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "branch_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "vehicle_id": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "dateOfVisit": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-03-25"
                                                },
                                                "timeOfVisit": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "license_file_path": {
                                                    "type": "string",
                                                    "example": "uploads/licenses/license123.jpg"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "Pending"
                                                },
                                                "is_active": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "update_by": {
                                                    "type": "integer",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-24T10:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-24T10:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated. Please log in to continue.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated. Please log in to continue."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "branch_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The branch_id field is required."
                                                    }
                                                },
                                                "license_file_path": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The license_file_path field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/customerApi/v1/logout": {
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Logout Customer (invalidate current token)",
                "operationId": "b8d62f6b0cedf7ee5312314c1076c7e2",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/dealerApi/v1/form-data/getVehicleMakes": {
            "get": {
                "tags": [
                    "Form Data"
                ],
                "summary": "Get All Vehicle Makes - Vehicle Type",
                "description": "Returns a list of vehicle companies (makes), optionally filtered by vehicle type (1=Car, 2=Bike, 3=Both).",
                "operationId": "getVehicleMakes",
                "parameters": [
                    {
                        "name": "vehicle_type",
                        "in": "query",
                        "description": "Vehicle type filter: 1=Car, 2=Bike, 3=Both",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                1,
                                2,
                                3
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of vehicle makes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 12
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Hyundai"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The vehicle_type field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/dealerApi/v1/form-data/getVehicleMakeModels": {
            "get": {
                "tags": [
                    "Form Data"
                ],
                "summary": "Get Models by Vehicle Make",
                "description": "Fetches all vehicle models based on selected company (make) and optional vehicle type.",
                "operationId": "getVehicleMakeModels",
                "parameters": [
                    {
                        "name": "cmp_id",
                        "in": "query",
                        "description": "ID of the vehicle company (make)",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    },
                    {
                        "name": "vehicle_type",
                        "in": "query",
                        "description": "Optional: Vehicle type filter (1=Car, 2=Bike, 3=Both)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                1,
                                2,
                                3
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of vehicle models",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 101
                                            },
                                            "cmp_id": {
                                                "type": "integer",
                                                "example": 2
                                            },
                                            "model_name": {
                                                "type": "string",
                                                "example": "Swift Dzire"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/dealerApi/v1/form-data/getVehicleModelVariants": {
            "get": {
                "tags": [
                    "Form Data"
                ],
                "summary": "Get Variants by Vehicle Model",
                "description": "Fetches all variants for a specific vehicle model.",
                "operationId": "getVehicleModelVariants",
                "parameters": [
                    {
                        "name": "model_id",
                        "in": "query",
                        "description": "ID of the vehicle model",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of vehicle model variants",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 201
                                            },
                                            "model_id": {
                                                "type": "integer",
                                                "example": 5
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "SX (O) Turbo"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/dealerApi/v1/form-data/getVehicleBodyTypes": {
            "get": {
                "tags": [
                    "Form Data"
                ],
                "summary": "Get Body Types by Vehicle Type",
                "description": "Fetches all body types based on vehicle type (1=Car, 2=Bike, 3=Both).",
                "operationId": "getVehicleBodyTypes",
                "parameters": [
                    {
                        "name": "vehicle_type",
                        "in": "query",
                        "description": "Vehicle type filter: 1=Car, 2=Bike, 3=Both",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                1,
                                2,
                                3
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of body types",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "title": {
                                                "type": "string",
                                                "example": "SUV"
                                            },
                                            "img_body_type": {
                                                "type": "string",
                                                "example": "/images/body_types/suv.png"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/dealerApi/v1/form-data/getCountries": {
            "get": {
                "tags": [
                    "Form Data"
                ],
                "summary": "Get list of countries",
                "description": "Returns a list of all countries",
                "operationId": "getCountries",
                "responses": {
                    "200": {
                        "description": "List of countries retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 101
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "India"
                                            },
                                            "short_code": {
                                                "type": "string",
                                                "example": "IN"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No countries found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/dealerApi/v1/form-data/getStates": {
            "get": {
                "tags": [
                    "Form Data"
                ],
                "summary": "Get list of states",
                "description": "Returns list of states for a given country ID",
                "operationId": "getStates",
                "parameters": [
                    {
                        "name": "country_id",
                        "in": "query",
                        "description": "ID of the country",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 101
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of states retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Maharashtra"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The country_id field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/dealerApi/v1/form-data/getCities": {
            "get": {
                "tags": [
                    "Form Data"
                ],
                "summary": "Get list of cities",
                "description": "Returns list of cities for a given state ID",
                "operationId": "getCities",
                "parameters": [
                    {
                        "name": "state_id",
                        "in": "query",
                        "description": "ID of the state",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 21
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of cities retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 203
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Mumbai"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The state_id field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/dealerApi/v1/form-data/getRTOsByState": {
            "get": {
                "tags": [
                    "Form Data"
                ],
                "summary": "Get RTOs by state",
                "description": "Returns list of RTOs for a given state ID",
                "operationId": "getRTOsByState",
                "parameters": [
                    {
                        "name": "state_id",
                        "in": "query",
                        "description": "ID of the state",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 21
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of RTOs retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Mumbai RTO"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The state_id field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/dealerApi/v1/form-data/getVehicleFuelTypes": {
            "get": {
                "tags": [
                    "Form Data"
                ],
                "summary": "Get list of vehicle fuel types",
                "description": "Returns a list of all vehicle fuel types",
                "operationId": "getVehicleFuelTypes",
                "responses": {
                    "200": {
                        "description": "List of vehicle fuel types retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Petrol"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No fuel types found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/dealerApi/v1/form-data/getVehicleTransmissionTypes": {
            "get": {
                "tags": [
                    "Form Data"
                ],
                "summary": "Get list of vehicle transmission types",
                "description": "Returns a list of all vehicle transmission types",
                "operationId": "getVehicleTransmissionTypes",
                "responses": {
                    "200": {
                        "description": "List of vehicle transmission types retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Automatic"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No transmission types found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/dealerApi/v1/dealerRegister": {
            "post": {
                "tags": [
                    "Dealer: Registration/Login"
                ],
                "summary": "Dealer Registration",
                "description": "Registers a new user and stores their credentials separately.",
                "operationId": "dealerRegister",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "contact_no",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "contact_no": {
                                        "type": "string",
                                        "example": "9876543210"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "SecurePass123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "SecurePass123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "johndoe@example.com"
                                                },
                                                "contact_no": {
                                                    "type": "string",
                                                    "example": "9876543210"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Registration failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/dealerApi/v1/dealerLogin": {
            "post": {
                "tags": [
                    "Dealer: Registration/Login"
                ],
                "summary": "Dealer Login",
                "description": "Authenticate Dealer and return an access token",
                "operationId": "dealerLogin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|sdfk9dsf8dsfksdf89sdf7..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/dealerApi/v1/vehicles": {
            "get": {
                "tags": [
                    "Dealer: Vehicles"
                ],
                "summary": "List Vehicles - Dealer",
                "description": "Returns a paginated list of vehicles for the authenticated dealer. Requires Bearer Token authentication.",
                "operationId": "listDealerVehicles",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of vehicles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Vehicle"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing Bearer Token"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Dealer: Vehicles"
                ],
                "summary": "Add New Vehicle - Dealer",
                "description": "Add details of new vehicle (Car or Bike) for the logged-in dealer.",
                "operationId": "storeVehicle",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "branch_id",
                                    "vehicle_type",
                                    "cmp_id",
                                    "model_id",
                                    "variant_id",
                                    "fuel_type",
                                    "mileage",
                                    "kms_driven",
                                    "owner",
                                    "featured_status",
                                    "onsale_status",
                                    "manufacture_year",
                                    "registration_year",
                                    "registered_state_id",
                                    "rto",
                                    "insurance_type",
                                    "accidental_status",
                                    "flooded_status",
                                    "last_service_kms",
                                    "is_active",
                                    "thumbnail_url"
                                ],
                                "properties": {
                                    "vehicle_type": {
                                        "description": "1=Car, 2=Bike",
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ],
                                        "example": 1
                                    },
                                    "branch_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "cmp_id": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "model_id": {
                                        "type": "integer",
                                        "example": 101
                                    },
                                    "variant_id": {
                                        "type": "integer",
                                        "example": 202
                                    },
                                    "fuel_type": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "mileage": {
                                        "type": "number",
                                        "example": 18.5
                                    },
                                    "kms_driven": {
                                        "type": "integer",
                                        "example": 25000
                                    },
                                    "owner": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "featured_status": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ],
                                        "example": 1
                                    },
                                    "onsale_status": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ],
                                        "example": 1
                                    },
                                    "manufacture_year": {
                                        "type": "integer",
                                        "example": 2020
                                    },
                                    "registration_year": {
                                        "type": "integer",
                                        "example": 2021
                                    },
                                    "registered_state_id": {
                                        "type": "integer",
                                        "example": 14
                                    },
                                    "rto": {
                                        "type": "integer",
                                        "example": "539"
                                    },
                                    "insurance_type": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ],
                                        "example": 1
                                    },
                                    "insurance_validity": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2026-05-31"
                                    },
                                    "accidental_status": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ],
                                        "example": 2
                                    },
                                    "flooded_status": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ],
                                        "example": 2
                                    },
                                    "last_service_kms": {
                                        "type": "integer",
                                        "example": 24000
                                    },
                                    "is_active": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2,
                                            3,
                                            4
                                        ],
                                        "example": 1
                                    },
                                    "thumbnail_url": {
                                        "description": "Vehicle thumbnail image",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "onsale_percentage": {
                                        "type": "number",
                                        "example": 10.5
                                    },
                                    "search_keywords": {
                                        "type": "string",
                                        "example": "SUV, black, 2020"
                                    },
                                    "last_service_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-12-10"
                                    },
                                    "regular_price": {
                                        "type": "number",
                                        "example": 550000
                                    },
                                    "selling_price": {
                                        "type": "number",
                                        "example": 520000
                                    },
                                    "pricing_type": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ],
                                        "example": 2
                                    },
                                    "emi_option": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ],
                                        "example": 1
                                    },
                                    "avg_interest_rate": {
                                        "type": "number",
                                        "example": 10.5
                                    },
                                    "tenure_months": {
                                        "type": "integer",
                                        "example": 36
                                    },
                                    "reservation_amt": {
                                        "type": "integer",
                                        "example": 5000
                                    },
                                    "is_admin_approved": {
                                        "type": "string",
                                        "enum": [
                                            "0",
                                            "1"
                                        ],
                                        "example": "0"
                                    },
                                    "soldReason": {
                                        "type": "string",
                                        "example": "Customer request"
                                    },
                                    "updated_by": {
                                        "type": "integer",
                                        "example": 12
                                    },
                                    "transmission_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "body_type": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "car_no_of_airbags": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "car_central_locking": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "car_seat_upholstery": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "car_sunroof": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "car_integrated_music_system": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "car_rear_ac": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "car_outside_rear_view_mirrors": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "car_power_windows": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "car_engine_start_stop": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "car_headlamps": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "car_power_steering": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "bike_headlight_type": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "bike_odometer": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "bike_drl": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "bike_mobile_connectivity": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "bike_gps_navigation": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "bike_usb_charging_port": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "bike_low_battery_indicator": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "bike_under_seat_storage": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "bike_speedometer": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "bike_stand_alarm": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "bike_low_fuel_indicator": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "bike_low_oil_indicator": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "bike_start_type": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "bike_kill_switch": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "bike_break_light": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "bike_turn_signal_indicator": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Vehicle created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicle"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/dealerApi/v1/vehicles/{vehicleId}/images": {
            "post": {
                "tags": [
                    "Dealer: Vehicles"
                ],
                "summary": "Upload detailed vehicle images",
                "description": "Uploads all required vehicle image fields and stores them in the vehicleimages table.",
                "operationId": "752969d9b11fa039d58212044527b8c2",
                "parameters": [
                    {
                        "name": "vehicleId",
                        "in": "path",
                        "description": "ID of the vehicle",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "exterior_main_front_img"
                                ],
                                "properties": {
                                    "exterior_main_front_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_main_right_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_main_back_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_main_left_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_main_tank_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_main_handlebar_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_main_headlight_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_main_tail_light_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_main_speedometer_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_main_exhaust_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_main_seat_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_main_roof_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_main_bonetopen_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_main_engine_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_diagnoal_right_front_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_diagnoal_right_back_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_diagnoal_left_back_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_diagnoal_left_front_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_wheel_front_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_wheel_rear_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_wheel_right_front_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_wheel_right_back_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_wheel_left_back_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_wheel_left_front_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_wheel_spare_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_tyrethread_front_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_tyrethread_back_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_tyrethread_right_front_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_tyrethread_right_back_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_tyrethread_left_back_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_tyrethread_left_front_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_underbody_front_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_underbody_rear_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_underbody_right_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_underbody_left_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "interior_dashboard_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "interior_infotainment_system_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "interior_steering_wheel_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "interior_odometer_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "interior_gear_lever_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "interior_pedals_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "interior_front_cabin_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "interior_mid_cabin_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "interior_rear_cabin_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "interior_driver_side_door_panel_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "interior_driver_side_adjustment_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "interior_boot_inside_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "interior_boot_door_open_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "others_keys_img": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Images uploaded successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Images uploaded successfully."
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Image upload failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Image upload failed."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Exception message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/dealerApi/v1/vehicles/{vehicle}": {
            "get": {
                "tags": [
                    "Dealer: Vehicles"
                ],
                "summary": "Get Vehicle Details",
                "description": "Fetches details of a specific vehicle by ID",
                "operationId": "getVehicleDetails",
                "parameters": [
                    {
                        "name": "vehicle",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicle details fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Vehicle fetched successfully."
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle not found or access denied"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Dealer: Vehicles"
                ],
                "summary": "Update Vehicle - Dealer",
                "description": "Update vehicle details (Car or Bike) for the logged-in dealer. Use multipart/form-data with _method=PUT.",
                "operationId": "updateVehicledetails",
                "parameters": [
                    {
                        "name": "vehicle",
                        "in": "path",
                        "description": "Vehicle ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "_method": {
                                        "type": "string",
                                        "example": "PUT"
                                    },
                                    "cmp_id": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "model_id": {
                                        "type": "integer",
                                        "example": 101
                                    },
                                    "variant_id": {
                                        "type": "integer",
                                        "example": 202
                                    },
                                    "fuel_type": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "mileage": {
                                        "type": "number",
                                        "example": 18.5
                                    },
                                    "kms_driven": {
                                        "type": "integer",
                                        "example": 25000
                                    },
                                    "owner": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "featured_status": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ],
                                        "example": 1
                                    },
                                    "onsale_status": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ],
                                        "example": 1
                                    },
                                    "manufacture_year": {
                                        "type": "integer",
                                        "example": 2020
                                    },
                                    "registration_year": {
                                        "type": "integer",
                                        "example": 2021
                                    },
                                    "registered_state_id": {
                                        "type": "integer",
                                        "example": 14
                                    },
                                    "rto": {
                                        "type": "string",
                                        "example": "539"
                                    },
                                    "insurance_type": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ],
                                        "example": 1
                                    },
                                    "insurance_validity": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2026-05-31"
                                    },
                                    "accidental_status": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ],
                                        "example": 2
                                    },
                                    "flooded_status": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ],
                                        "example": 2
                                    },
                                    "last_service_kms": {
                                        "type": "integer",
                                        "example": 24000
                                    },
                                    "is_active": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2,
                                            3,
                                            4
                                        ],
                                        "example": 1
                                    },
                                    "thumbnail_url": {
                                        "description": "Vehicle thumbnail image",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "onsale_percentage": {
                                        "type": "number",
                                        "example": 10.5
                                    },
                                    "search_keywords": {
                                        "type": "string",
                                        "example": "SUV, black, 2020"
                                    },
                                    "last_service_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-12-10"
                                    },
                                    "regular_price": {
                                        "type": "number",
                                        "example": 550000
                                    },
                                    "selling_price": {
                                        "type": "number",
                                        "example": 520000
                                    },
                                    "pricing_type": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ],
                                        "example": 2
                                    },
                                    "emi_option": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ],
                                        "example": 1
                                    },
                                    "avg_interest_rate": {
                                        "type": "number",
                                        "example": 10.5
                                    },
                                    "tenure_months": {
                                        "type": "integer",
                                        "example": 36
                                    },
                                    "reservation_amt": {
                                        "type": "integer",
                                        "example": 5000
                                    },
                                    "soldReason": {
                                        "type": "string",
                                        "example": "Customer request"
                                    },
                                    "transmission_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "body_type": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "car_no_of_airbags": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "car_central_locking": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "car_seat_upholstery": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "car_sunroof": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "car_integrated_music_system": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "car_rear_ac": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "car_outside_rear_view_mirrors": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "car_power_windows": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "car_engine_start_stop": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "car_headlamps": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "car_power_steering": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "bike_headlight_type": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "bike_odometer": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "bike_drl": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "bike_mobile_connectivity": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "bike_gps_navigation": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "bike_usb_charging_port": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "bike_low_battery_indicator": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "bike_under_seat_storage": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "bike_speedometer": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "bike_stand_alarm": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "bike_low_fuel_indicator": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "bike_low_oil_indicator": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "bike_start_type": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "bike_kill_switch": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "bike_break_light": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    },
                                    "bike_turn_signal_indicator": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vehicle updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicle"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Dealer: Vehicles"
                ],
                "summary": "Delete Vehicle - Remove From Listing",
                "description": "Soft deletes a vehicle by ID",
                "operationId": "deleteVehicle",
                "parameters": [
                    {
                        "name": "vehicle",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicle deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vehicle soft deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/dealerApi/v1/vehicles/{vehicle}/update-images": {
            "post": {
                "tags": [
                    "Dealer: Vehicles"
                ],
                "summary": "Update vehicle images",
                "description": "Allows an authenticated dealer to update a vehicle's detailed information and upload multiple images.",
                "operationId": "updateVehicleImages",
                "parameters": [
                    {
                        "name": "vehicle",
                        "in": "path",
                        "description": "ID of the vehicle to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Vehicle image and detail data",
                    "required": false,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "exterior_main_front_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_main_right_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_main_back_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_main_left_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_main_tank_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_main_handlebar_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_main_headlight_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_main_tail_light_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_main_speedometer_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_main_exhaust_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_main_seat_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_main_roof_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_main_bonetopen_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_main_engine_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_diagnoal_right_front_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_diagnoal_right_back_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_diagnoal_left_back_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_diagnoal_left_front_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_wheel_front_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_wheel_rear_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_wheel_right_front_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_wheel_right_back_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_wheel_left_back_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_wheel_left_front_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_wheel_spare_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_tyrethread_front_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_tyrethread_back_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_tyrethread_right_front_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_tyrethread_right_back_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_tyrethread_left_back_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_tyrethread_left_front_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_underbody_front_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_underbody_rear_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_underbody_right_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "exterior_underbody_left_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "interior_dashboard_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "interior_infotainment_system_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "interior_steering_wheel_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "interior_odometer_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "interior_gear_lever_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "interior_pedals_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "interior_front_cabin_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "interior_mid_cabin_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "interior_rear_cabin_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "interior_driver_side_door_panel_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "interior_driver_side_adjustment_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "interior_boot_inside_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "interior_boot_door_open_img": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "others_keys_img": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vehicle updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vehicle updated successfully."
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized. Please login."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized. You do not have permission to update this vehicle."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to update vehicle.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update vehicle."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "title": "User",
                "description": "User model schema",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "contact_no": {
                        "type": "string",
                        "example": "1234567890"
                    }
                },
                "type": "object"
            },
            "UpdateVehicleRequest": {
                "title": "Update Vehicle Request",
                "description": "Request body for updating a vehicle",
                "required": [
                    "vehicle_type",
                    "cmp_id",
                    "model_id"
                ],
                "properties": {
                    "vehicle_type": {
                        "description": "1=Car, 2=Bike",
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ],
                        "example": 1
                    },
                    "cmp_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "model_id": {
                        "type": "integer",
                        "example": 10
                    },
                    "variant_id": {
                        "type": "integer",
                        "example": 3
                    },
                    "fuel_type": {
                        "type": "integer",
                        "example": 2
                    },
                    "mileage": {
                        "type": "number",
                        "format": "float",
                        "example": 18.5
                    },
                    "kms_driven": {
                        "type": "integer",
                        "example": 24000
                    },
                    "manufacture_year": {
                        "type": "integer",
                        "example": 2021
                    },
                    "registration_year": {
                        "type": "integer",
                        "example": 2022
                    },
                    "color_id": {
                        "type": "integer",
                        "example": 4
                    },
                    "regular_price": {
                        "type": "number",
                        "format": "float",
                        "example": 950000
                    },
                    "selling_price": {
                        "type": "number",
                        "format": "float",
                        "example": 920000
                    },
                    "is_active": {
                        "type": "integer",
                        "enum": [
                            1,
                            2,
                            3,
                            4
                        ]
                    },
                    "onsale_status": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "onsale_percentage": {
                        "type": "number",
                        "format": "float",
                        "example": 10.5
                    },
                    "search_keywords": {
                        "type": "string",
                        "example": "SUV, black, 2020"
                    },
                    "insurance_type": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "insurance_validity": {
                        "type": "string",
                        "format": "date"
                    },
                    "accidental_status": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "flooded_status": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "last_service_kms": {
                        "type": "integer"
                    },
                    "last_service_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "reservation_amt": {
                        "type": "integer"
                    },
                    "pricing_type": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "emi_option": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "avg_interest_rate": {
                        "type": "number",
                        "format": "float"
                    },
                    "tenure_months": {
                        "type": "integer"
                    },
                    "soldReason": {
                        "type": "string"
                    },
                    "is_admin_approved": {
                        "type": "string",
                        "enum": [
                            "0",
                            "1"
                        ]
                    },
                    "updated_by": {
                        "type": "integer"
                    },
                    "thumbnail_url": {
                        "type": "string",
                        "format": "binary"
                    },
                    "branch_id": {
                        "type": "integer"
                    },
                    "rto": {
                        "type": "string"
                    },
                    "registered_state_id": {
                        "type": "integer"
                    },
                    "owner": {
                        "type": "integer"
                    },
                    "transmission_id": {
                        "type": "integer"
                    },
                    "body_type": {
                        "type": "integer"
                    },
                    "car_no_of_airbags": {
                        "type": "integer"
                    },
                    "car_central_locking": {
                        "type": "integer",
                        "enum": [
                            1,
                            2,
                            3
                        ]
                    },
                    "car_seat_upholstery": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "car_sunroof": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "car_integrated_music_system": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "car_rear_ac": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "car_outside_rear_view_mirrors": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "car_power_windows": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "car_engine_start_stop": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "car_headlamps": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "car_power_steering": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "bike_headlight_type": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "bike_odometer": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "bike_drl": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "bike_mobile_connectivity": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "bike_gps_navigation": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "bike_usb_charging_port": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "bike_low_battery_indicator": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "bike_under_seat_storage": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "bike_speedometer": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "bike_stand_alarm": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "bike_low_fuel_indicator": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "bike_low_oil_indicator": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "bike_start_type": {
                        "type": "integer",
                        "enum": [
                            1,
                            2,
                            3
                        ]
                    },
                    "bike_kill_switch": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "bike_break_light": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "bike_turn_signal_indicator": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    }
                },
                "type": "object"
            },
            "Vehicle": {
                "title": "Vehicle Resource",
                "description": "Vehicle resource with dealer and vehicle details",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "branch_id": {
                        "type": "integer",
                        "example": 10
                    },
                    "branch_name": {
                        "type": "string",
                        "example": "Mumbai Branch"
                    },
                    "branch_contact_number": {
                        "type": "string",
                        "example": "+91-9876543210"
                    },
                    "branch_country_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "branch_country_name": {
                        "type": "string",
                        "example": "India"
                    },
                    "branch_state_id": {
                        "type": "integer",
                        "example": 21
                    },
                    "branch_state_name": {
                        "type": "string",
                        "example": "Maharashtra"
                    },
                    "branch_city_id": {
                        "type": "integer",
                        "example": 203
                    },
                    "branch_city_name": {
                        "type": "string",
                        "example": "Mumbai"
                    },
                    "vehicle_type_name": {
                        "type": "string",
                        "example": "Car"
                    },
                    "cmp_id": {
                        "type": "integer",
                        "example": 5
                    },
                    "cmp_name": {
                        "type": "string",
                        "example": "Hyundai"
                    },
                    "model_id": {
                        "type": "integer",
                        "example": 9
                    },
                    "model_name": {
                        "type": "string",
                        "example": "Creta"
                    },
                    "variant_id": {
                        "type": "integer",
                        "example": 3
                    },
                    "variant_name": {
                        "type": "string",
                        "example": "SX (O) Turbo"
                    },
                    "fuel_type_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "fuel_type": {
                        "type": "string",
                        "example": "Petrol"
                    },
                    "body_type_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "body_type": {
                        "type": "string",
                        "example": "SUV"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Dealer: Branches",
            "description": "Dealer: Branches"
        },
        {
            "name": "Customers",
            "description": "Customers"
        },
        {
            "name": "Form Data",
            "description": "Form Data"
        },
        {
            "name": "Dealer: Registration/Login",
            "description": "Dealer: Registration/Login"
        },
        {
            "name": "Dealer: Vehicles",
            "description": "Dealer: Vehicles"
        }
    ]
}